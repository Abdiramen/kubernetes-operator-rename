apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: ngrok-gatewayclass
  namespace: ngrok-ingress-controller
spec:
  controllerName: ngrok.com/gateway-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: prod-web
  namespace: ngrok-ingress-controller
spec:
  gatewayClassName: ngrok-gatewayclass 
  listeners:
  - protocol: HTTPS
    hostname: themoreyouknow.ngrok.dev
    port: 443
    name: prod-web-gw
    tls:
      mode: Terminate
      certificateRefs:
      - name: ngrokcert # ngrok provisions it's on cert, sowe don't accept a cert, so use a placeholder here!
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: example-route
  namespace: ngrok-ingress-controller
spec:
  parentRefs:
  - name: prod-web
  hostnames:
    - themoreyouknow.ngrok.dev # TODO: ADD HOSTNAME HERE
  rules:
  - backendRefs:
    - name: http-echo-svc
      port: 80
  - filters:
    - type: URLRewrite
      urlRewrite: # cannot be on the same rule as a backendRe
        hostname: wigle.net # redirect to this host!
        path:
          type: ReplacePrefixMatch
          replacePrefixMatch: /paprika
    matches:
    - path: 
        type: PathPrefix
        value: /pumpkin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-echo-deploy
  namespace: ngrok-ingress-controller
spec:
  selector:
    matchLabels:
      app: http-echo-app
  replicas: 2
  template:
    metadata:
      labels:
        app: http-echo-app
    spec:
      containers:
      - name: http-echo-path2
        image: mendhak/http-https-echo:24
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: http-echo-svc
  namespace: ngrok-ingress-controller
  labels:
    app: http-echo-app
spec:
  ports:
  - name: http-echo-app
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: http-echo-app